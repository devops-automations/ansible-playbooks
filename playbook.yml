---
- name: Install components based on EC2 tags
  hosts: all
  gather_facts: true
  become: true
  vars:
    certbot_domain: "vmetrics.nuxbet.net"
    certbot_generate_certificate: true
#    certbot_admin_email: "h.merkieiev@nuxgame.com"
    certbot_auto_renew: true
    certbot_testmode: false
    certbot_delete_certs: false
    certbot_create_if_missing: true

    certbot_dns_plugin: cloudflare
    certbot_dns_api_token: "{{ lookup('env', 'CF_API_TOKEN') }}"

    certbot_certs:
      - domains:
          - "{{ certbot_domain }}"

    certbot_create_reload_services:
      - nginx

  pre_tasks:
    - name: Get EC2 metadata token
      shell: >
        curl -X PUT "http://169.254.169.254/latest/api/token"
        -H "X-aws-ec2-metadata-token-ttl-seconds: 120"
      register: imds_token
      changed_when: false

    - name: Get EC2 instance tag keys
      shell: >
        curl -H "X-aws-ec2-metadata-token: {{ imds_token.stdout }}"
        -s http://169.254.169.254/latest/meta-data/tags/instance
      register: ec2_tags_list
      changed_when: false

    - name: Get EC2 instance tag values
      shell: >
        curl -H "X-aws-ec2-metadata-token: {{ imds_token.stdout }}"
        -s http://169.254.169.254/latest/meta-data/tags/instance/{{ item }}
      loop: "{{ ec2_tags_list.stdout_lines }}"
      register: ec2_tags_values
      changed_when: false

    - name: Build EC2 tags dictionary
      set_fact:
        ec2_instance_tags: >-
          {{
            dict(ec2_tags_values.results | zip(ec2_tags_list.stdout_lines) |
            map('reverse') |
            map('list') |
            map('first') | zip(ec2_tags_values.results | map(attribute='stdout')))
          }}

    - name: Debug EC2 tags
      debug:
        var: ec2_instance_tags

  roles:
    - role: certbot
      when: ec2_instance_tags.USERDATA_NGINX is defined and ec2_instance_tags.USERDATA_NGINX | bool

  tasks:
    - name: Include VictoriaMetrics role dynamically
      include_role:
        name: "victoria-metrics.{{ ec2_instance_tags.USERDATA_VICTORIA_METRICS }}"
      when: ec2_instance_tags.USERDATA_VICTORIA_METRICS is defined

    - name: Include Nginx role dynamically
      include_role:
        name: nginx
      when: ec2_instance_tags.USERDATA_NGINX is defined and ec2_instance_tags.USERDATA_NGINX | bool
      vars:
        nginx_type: opensource
        nginx_branch: mainline

    - name: Copy static config
      when: ec2_instance_tags.USERDATA_NGINX is defined and ec2_instance_tags.USERDATA_NGINX | bool
      copy:
        content: |
          server {
              listen 80;
              server_name {{ certbot_domain }};
              return 301 https://$host$request_uri;
          }

          server {
              listen 443 ssl;
              server_name {{ certbot_domain }};

              ssl_certificate /etc/letsencrypt/live/{{ certbot_domain }}/fullchain.pem;
              ssl_certificate_key /etc/letsencrypt/live/{{ certbot_domain }}/privkey.pem;

              ssl_protocols TLSv1.2 TLSv1.3;
              ssl_ciphers HIGH:!aNULL:!MD5;

              location / {
                  proxy_pass http://localhost:8428;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              }
          }
        dest: /etc/nginx/conf.d/default.conf
      notify: Reload NGINX

  handlers:
    - import_tasks: handlers/main.yml
